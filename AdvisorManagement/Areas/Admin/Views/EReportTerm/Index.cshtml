@model IEnumerable<AdvisorManagement.Models.PlanAdvisor>
@using AdvisorManagement.Models;

@{
    ViewBag.Title = "Danh sách báo cáo";
    Layout = "~/Views/Shared/_Layoutvlu.cshtml";

    List<VLClass> listYearAdvisor = (List<VLClass>)ViewBag.listYear;
    var yearNow = (int)Session["yearNow"];
    var yearLast = yearNow - 1;
}

<div class="container-fluid">
    <!-- ============================================================== -->
    <!-- Start Page Content -->
    <!-- ============================================================== -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title mb-0">Báo cáo cuối học kì</h5>



                </div>
                <div class="page-breadcrumb">
                    <div class="row ">
                        <div class="col-4 d-flex no-block align-items-center  my-2">
                            @if (int.Parse(Session["RoleName"].ToString()) == 1)
                            {
                                <a onclick="ReadEvol()" class="btn btn-success" style=" margin-left: 5px; width: 200px; color: white">
                                    Danh mục đánh giá <i style="margin-left:5px" class="fas fa-clipboard-list"></i>

                                </a>
                                <a onclick="ReadAllUser()" class="btn btn-danger" style=" margin-left: 5px; width: 230px; color: white">
                                    Danh mục đánh giá giảng viên
                                </a>

                            }
                            else if (int.Parse(Session["RoleName"].ToString()) == 2)
                            {
                                <a onclick="ReadAllUser()" class="btn btn-danger" style=" margin-left: 5px; width: 230px; color: white">
                                    Danh mục đánh giá giảng viên
                                </a>
                            }


                        </div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">
                    </h5>
                    <div class="">
                        <label for="cars">Năm học:</label>
                        <select id="year" name="year" onchange="filterFunction()">
                            <option selected value="0">ALL</option>
                            @foreach (var item in listYearAdvisor)
                            {
                                var i = int.Parse(item.semester_name) - 1;
                                <option value="@item.semester_name">@i - @item.semester_name</option>
                            }
                        </select>
                    </div>

                    <div class="table-responsive" style="margin-top:10px">
                        <table width="100%" id="zero_config_advisor" class="table table-light table-hover table-bordered" role="grid" aria-describedby="zero_config_info">
                            <thead>
                                <tr class="table-active text-uppercase">
                                    <th width="10%" style="text-align:center"><b>STT</b></th>
                                    <th width="25%" style="text-align:center"><b>Mã lớp học  </b></th>
                                    <th width="15%" style="text-align:center"><b>Người cố vấn</b></th>
                                    <th width="15%" style="text-align:center"><b>Khóa        </b></th>
                                    @*<th width="15%" style="text-align:center">Ngày nhận</th>*@
                                </tr>
                            </thead>
                            <tbody id="myTable">
                            </tbody>
                        </table>

                    </div>
                </div>
            </div>
        </div>
    </div>
    @if (int.Parse(Session["RoleName"].ToString()) == 1)
    {
        @* show *@
        <div id="modalEvol" class="modal fade" role="document">
            <div class="modal-dialog" style="max-width: 60%;" role="document">

                <!-- Modal content-->
                <div class="modal-content">
                    @*                <span class="close" style="color: #aaaaaa; float: right; font-size: 28px; font-weight: bold">&times;</span>*@
                    <div class="modal-header">
                        <button onclick="createEvol()" class="btn btn-info">Thêm <i class="fas fa-tasks"></i></button>

                        <input hidden id="id_evol" value="" />
                        <h4 class="modal-title">Tiêu chí đánh giá</h4>
                    </div>
                    <div class="table-responsive" style="margin-top:10px">
                        <table width="100%" id="zero_config_evol" class="table table-light table-hover table-bordered" role="grid" aria-describedby="zero_config_info">
                            <thead>
                                <tr class="table-active text-uppercase">
                                    <th style="text-align:center">STT</th>
                                    <th style="text-align:center">Loai</th>
                                    <th style="text-align:center">Mô tả</th>
                                    <th style="text-align:center">Đánh giá</th>
                                    <th style="text-align:center">Khoảng bắt đầu</th>
                                    <th style="text-align:center">Khoảng kết thúc</th>
                                    <th style="text-align:center">Chỉnh sửa</th>

                                </tr>
                            </thead>
                            <tbody id="myTable">
                            </tbody>
                        </table>
                    </div>
                    <div id="showEvol" class="modal-footer">
                    </div>
                </div>
            </div>
        </div>

        @* show *@
        <div id="modalEvolUser" class="modal fade" role="document">
            <div class="modal-dialog" style="max-width: 60%;" role="document">
                <div id="overlay">
                    <div class="cv-spinner">
                        <span class="spinner"></span>
                    </div>
                </div>
                <!-- Modal content-->
                <div class="modal-content">
                    @*                <span class="close" style="color: #aaaaaa; float: right; font-size: 28px; font-weight: bold">&times;</span>*@
                    <div class="modal-header">
                        <button onclick="ExportUserAll()" class="btn btn-info">Xuất đánh giá tổng thể <i class="fas fa-tasks"></i></button>

                        <input hidden id="id_evol_user" value="" />
                        <h4 class="modal-title">Đánh giá giảng viên</h4>
                    </div>
                    <div class="table-responsive" style="margin-top:10px">
                        <table width="100%" id="zero_config_evol_user" class="table table-light table-hover table-bordered" role="grid" aria-describedby="zero_config_info">
                            <thead>
                                <tr class="table-active text-uppercase">
                                    <th scope="col" style="text-align:center"><b>STT               </b> </th>
                                    <th scope="col" style="text-align:center"><b>Mã lớp            </b>  </th>
                                    <th scope="col" style="text-align:center"><b>Cố vấn học tập    </b>   </th>
                                    <th scope="col" style="text-align:center"><b>Phần mềm đánh giá </b>    </th>
                                    <th scope="col" style="text-align:center"><b>Cố vấn tự đánh giá       </b>     </th>
                                    <th scope="col" style="text-align:center"><b>Khoa đánh giá     </b>      </th>
                                    <th scope="col" style="text-align:center"><b>Ghi chú           </b>      </th>
                                    <th scope="col" style="text-align:center"><b>Chỉnh sửa         </b>      </th>

                                </tr>
                            </thead>
                            <tbody id="myTable">
                            </tbody>
                        </table>
                    </div>
                    <div id="showEvolUser" class="modal-footer">
                    </div>
                </div>
            </div>
        </div>

        //
        <div id="modalUpdateCheck" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Cập nhật đánh giá báo cáo </h4>
                    </div>
                    <input hidden id="id_edit_check" value="" />
                    <div class="modal-body">
                        <div class="">
                            <div class="col-md-12" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                                <div class="col-md-8"><span>Loai (điền kí tự dữ liệu Alphabet):</span></div>
                                <div class="col-md-12">
                                    <input id="txtLoaiECheck" type="text" class="form-control" maxlength="1" min="1" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button onclick="HideModalUpCheck()" type="button" class="btn btn-danger" data-dismiss="modal">Đóng</button>
                        <button id="btnEditCheckUser" class="btn btn-info" type="submit">Cập nhật</button>
                    </div>

                </div>
            </div>
        </div>
        @* create *@
        <div id="modalCreate" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Thêm đánh giá chỉ tiêu</h4>
                    </div>
                    <div class="modal-body">
                        <div class="">
                            <div class="col-md-12" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                                <div class="col-md-8"><span>Loai (điền kí tự dữ liệu Alphabet):</span></div>
                                <div class="col-md-12">
                                    <input id="txtLoai" type="text" class="form-control" maxlength="1" />
                                </div>
                            </div>
                        </div>
                        <div class="">
                            <div class="col-md-12" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                                <div class="col-md-4"><span>Mô tả:</span></div>
                                <div class="col-md-12">
                                    <input id="txtMota" type="text" class="form-control" />
                                </div>
                            </div>
                        </div>
                        <div class="">
                            <div class="col-md-12" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                                <div class="col-md-4"><span>Đánh giá:</span></div>
                                <div class="col-md-12">
                                    <input id="txtDanhGia" type="text" class="form-control" />
                                </div>
                            </div>
                        </div>
                        <div class="row mx-1">
                            <div class="col-md-6" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                                <div class="col-md-8"><span>Khoảng bắt đầu:</span></div>
                                <div class="col-md-4">
                                    <input id="txtTu" type="number" class="form-control" min="0" max="100" />
                                </div>
                            </div>
                            <div class="col-md-6" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                                <div class="col-md-8"><span>Khoảng kết thúc:</span></div>
                                <div class="col-md-4">
                                    <input id="txtKhoang" type="number" class="form-control" min="0" max="100" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button onclick="HideModal()" type="button" class="btn btn-danger" data-dismiss="modal">Đóng</button>
                        <button id="btnCreate" class="btn btn-primary" type="submit">Thêm</button>
                    </div>
                </div>
            </div>
        </div>
        @* Update *@
        <div id="modalUpdate" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Chỉnh sửa tiêu chí </h4>
                    </div>
                    <input hidden id="id_edit" value="" />
                    <div class="modal-body">
                        <div class="">
                            <div class="col-md-12" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                                <div class="col-md-8"><span>Loai (điền kí tự dữ liệu Alphabet):</span></div>
                                <div class="col-md-12">
                                    <input id="txtLoaiE" type="text" class="form-control" maxlength="1" />
                                </div>
                            </div>
                        </div>
                        <div class="">
                            <div class="col-md-12" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                                <div class="col-md-4"><span>Mô tả:</span></div>
                                <div class="col-md-12">
                                    <input id="txtMotaE" type="text" class="form-control" />
                                </div>
                            </div>
                        </div>
                        <div class="">
                            <div class="col-md-12" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                                <div class="col-md-4"><span>Đánh giá:</span></div>
                                <div class="col-md-12">
                                    <input id="txtDanhGiaE" type="text" class="form-control" />
                                </div>
                            </div>
                        </div>
                        <div class="row mx-1">
                            <div class="col-md-6" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                                <div class="col-md-8"><span>Khoảng bắt đầu:</span></div>
                                <div class="col-md-4">
                                    <input id="txtTuE" type="number" class="form-control" min="0" max="100" />
                                </div>
                            </div>
                            <div class="col-md-6" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                                <div class="col-md-8"><span>Khoảng kết thúc:</span></div>
                                <div class="col-md-4">
                                    <input id="txtKhoangE" type="number" class="form-control" min="0" max="100" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button onclick="HideModalUp()" type="button" class="btn btn-danger" data-dismiss="modal">Đóng</button>
                        <button id="btnEdit" class="btn btn-primary" type="submit">Sửa</button>
                    </div>

                </div>
            </div>
        </div>


    }
    else if (int.Parse(Session["RoleName"].ToString()) == 2)
    {
        @* show *@
        <div id="modalEvolUser" class="modal fade" role="document">
            <div class="modal-dialog" style="max-width: 60%;" role="document">

                <!-- Modal content-->
                <div class="modal-content">
                    @*                <span class="close" style="color: #aaaaaa; float: right; font-size: 28px; font-weight: bold">&times;</span>*@
                    <div class="modal-header">
                       @* <button onclick="ExportUserAll()" class="btn btn-info">Xuất đánh giá tổng thể <i class="fas fa-tasks"></i></button>*@

                        <input hidden id="id_evol_user" value="" />
                        <h4 class="modal-title">Đánh giá cá nhân</h4>
                    </div>
                    <div class="table-responsive" style="margin-top:10px">
                        <table width="100%" id="zero_config_evol_user" class="table table-light table-hover table-bordered" role="grid" aria-describedby="zero_config_info">
                            <thead>
                                <tr class="table-active text-uppercase">
                                    <th scope="col" style="text-align:center"><b>STT               </b> </th>
                                    <th scope="col" style="text-align:center"><b>Mã lớp            </b>  </th>
                                    <th scope="col" style="text-align:center"><b>Cố vấn học tập    </b>   </th>
                                    <th scope="col" style="text-align:center"><b>Phần mềm đánh giá </b>    </th>
                                    <th scope="col" style="text-align:center"><b>Cố vấn tự đánh giá       </b>     </th>
                                    <th scope="col" style="text-align:center"><b>Khoa đánh giá     </b>      </th>
                                    <th scope="col" style="text-align:center"><b>Ghi chú           </b>      </th>
                                    <th scope="col" style="text-align:center"><b>Chỉnh sửa         </b>      </th>

                                </tr>
                            </thead>
                            <tbody id="myTable">
                            </tbody>
                        </table>
                    </div>
                    <div id="showEvolUser" class="modal-footer">
                    </div>
                </div>
            </div>
        </div>

        //
        <div id="modalUpdateCheck" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Cập nhật đánh giá báo cáo </h4>
                    </div>
                    <input hidden id="id_edit_check" value="" />
                    <div class="modal-body">
                        <div class="">
                            <div class="col-md-12" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                                <div class="col-md-8"><span>Loai (điền kí tự dữ liệu Alphabet):</span></div>
                                <div class="col-md-12">
                                    <input id="txtLoaiECheck" type="text" class="form-control" maxlength="1" min="1" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button onclick="HideModalUpCheck()" type="button" class="btn btn-danger" data-dismiss="modal">Đóng</button>
                        <button id="btnEditCheckUser" class="btn btn-info" type="submit">Cập nhật</button>
                    </div>

                </div>
            </div>
        </div>
    }

    <!-- ============================================================== -->
    <!-- End PAge Content -->
    <!-- ============================================================== -->
    <!-- ============================================================== -->
    <!-- Right sidebar -->
    <!-- ============================================================== -->
    <!-- .right-sidebar -->
    <!-- ============================================================== -->
    <!-- End Right sidebar -->
    <!-- ============================================================== -->
</div>
<script src="~/Assets/extra-libs/DataTables/datatables.js"></script>
<script src="~/Assets/extra-libs/DataTables/datatables.min.js"></script>
<script>
        //Lấy data khi vừa vào web admin
         var dataTable = $("#zero_config_advisor").DataTable({
         'ajax': {
                'url': '@Url.Action("GetListClass", "EReportTerm")',
                'data': function (d) {
                 var input = document.getElementById("year");
                         filter = input.value.toUpperCase();
                            d.year = filter ;
                         },
                'type': 'get',
                'datatype':'json',
         },
         'columns':
             [
                 { 'data': 'ID', 'width': '5%', },
                 {
                     'data': 'idClass', 'width': '25%', 'render': function (data, type, row) {
                             return '<a id="proof" href="@Url.Action("ReportClass", "EReportTerm")/' + row.ID + '/" >' + data + '</a>';
                     }
                 },
                 { 'data': 'name', 'width': '25%' },
                 { 'data': 'course', 'width': '30%' },
                 ],
 /*            "aaSorting": [[2, "asc"]],*/

             'language': {
                 "decimal": "",
                 "emptyTable": "Không có dữ liệu",
                 "info": "Hiển thị từ _START_ đến _END_ trong _TOTAL_ mục",
                 "infoEmpty": "Showing 0 to 0 of 0 entries",
                 "infoFiltered": "(filtered from _MAX_ total entries)",
                 "infoPostFix": "",
                 "thousands": ",",
                 "lengthMenu": "Hiển thị _MENU_ mục",
                 "loadingRecords": "Đang tải...",
                 "search": "Tìm kiếm:",
                 "zeroRecords": "Không tìm thấy dữ liệu",
                 "paginate": {
                     "first": "First",
                     "last": "Last",
                     "next": "Sau",
                     "previous": "Trước"
                 },
             }

         });
         dataTable.on('order.dt search.dt', function () {
                let i = 1;
                dataTable.cells(null, 0, { search: 'applied', order: 'applied' }).every(function (cell) {
                    this.data(i++);
                });
         }).draw();
        this.ReadInit();

            function ReadInit() {
                jQuery('#showEvolUser').empty();
                $("#zero_config_evol_user").dataTable().fnDestroy();
                dataTable = $("#zero_config_evol_user").DataTable({
                 'ajax': {
                        'url': '@Url.Action("GetEvolUserTable", "EReportTerm")',
                        'type': 'get',
                        'datatype': 'json',
                        'serverSide': 'true',
                 },
                 'columns':
                     [
                         { 'data': 'stt', 'width': '5%', },
                         {
                             'data': 'class_id', 'width': '10%', 'render': function (data, type, row) {
                                 return '<a id="proof" href="@Url.Action("ReportClass", "EReportTerm")/' + row.id + '/" >' + data + '</a>';
                             }
                            },
                         { 'data': 'name_advisor', 'width': '15%' },
                         { 'data': 'evol_sys', 'width': '10%' },
                         { 'data': 'eval_advisor', 'width': '10%' },
                         { 'data': 'eval_admin', 'width': '10%' },
                         { 'data': 'note', 'width': '10%' },
                         {
                             'data': 'id', 'width': '10%', 'render': function (data) {
                                 return '<button onclick="UpdateAdminReport(' + data + ')" class="btn btn-danger">Đánh giá <i class="fas fa-tasks" ></i></button >'
                             }

                         }
                        ],
                    "aaSorting": [],

                    'language': {
                        "decimal": "",
                        "emptyTable": "Không có dữ liệu",
                        "info": "Hiển thị từ _START_ đến _END_ trong _TOTAL_ mục",
                        "infoEmpty": "hiển thị 0 đến 0 trong 0 dữ liệu",
                        "infoFiltered": "(filtered from _MAX_ total entries)",
                        "infoPostFix": "",
                        "thousands": ",",
                        "lengthMenu": "Hiển thị _MENU_ mục",
                        "loadingRecords": "Đang tải...",
                        "search": "Tìm kiếm:",
                        "zeroRecords": "Không tìm thấy dữ liệu",
                        "paginate": {
                            "first": "First",
                            "last": "Last",
                            "next": "Sau",
                            "previous": "Trước"
                        },
                    },
                    "autoWidth": true,
       /*             "aLengthMenu": [[-1], ["All"]],*/
                    "bLengthChange": true,
                    "bPaginate": true,
                    "bInfo": false,
               });
                dataTable.on('order.dt search.dt', function () {
                       let i = 1;
                       dataTable.cells(null, 0, { search: 'applied', order: 'applied' }).every(function (cell) {
                           this.data(i++);
                       });
                }).draw();
                $('#showEvolUser').append(`
                            <button onclick="hideReadUser()" type="button" class="btn btn-danger" data-dismiss="modal">Hủy</button>`);

            }

        function filterFunction() {
            $("#zero_config_advisor").dataTable().fnDestroy();
            var dataTable = $("#zero_config_advisor").DataTable({
                 'ajax': {
                        'url': '@Url.Action("GetListClass", "EReportTerm")',
                        'data': function (d) {
                         var input = document.getElementById("year");
                         filter = input.value.toUpperCase();
                            d.year = filter ;
                         },
                        'type': 'get',
                        'datatype':'json',
                 },
                 'columns':
                     [
                         { 'data': 'ID', 'width': '5%', },
                         {
                             'data': 'idClass', 'width': '25%', 'render': function (data, type, row) {
                                     return '<a id="proof" href="@Url.Action("ReportClass", "EReportTerm")/' + row.ID + '/" >' + data + '</a>';
                             }
                         },
                         { 'data': 'name', 'width': '25%' },
                         { 'data': 'course', 'width': '30%' },
                         ],
                 });
            dataTable.on('order.dt search.dt', function () {
                let i = 1;
                dataTable.cells(null, 0, { search: 'applied', order: 'applied' }).every(function (cell) {
                    this.data(i++);
                });
            }).draw();
        }
        function ReadEvol() {
                jQuery('#showEvol').empty();
                $("#zero_config_evol").dataTable().fnDestroy();
                dataTable = $("#zero_config_evol").DataTable({
                 'ajax': {
                        'url': '@Url.Action("GetEvolTable", "EReportTerm")',
                        'type': 'get',
                        'datatype': 'json',
                 },
                 'columns':
                     [
                         { 'data': 'id', 'width': '5%', },
                         { 'data': 'rank_type', 'width': '5%'},
                         { 'data': 'description', 'width': '40%' },
                         { 'data': 'rank_des', 'width': '20%' },
                         { 'data': 'rank_count', 'width': '10%' },
                         { 'data': 'rank_end', 'width': '10%' },
                         {
                             'data': 'id', 'width': '20%', 'render': function (data) {
                                 return '<button onclick="Update(' + data + ')" class="btn btn-info">Sửa <i class="fas fa-tasks" ></i></button > <button onclick="Delete(' + data + ')" class="btn btn-danger" >Xóa <i class="fas fa-trash-alt" ></i ></button > @*<a id="proof" href="@Url.Action("Details", "PlansAdvisor")/' + data + '/" class="btn btn-info">Minh chứng <i class="fas fa-edit"></i></a>*@'
                             }

                         }
                        ],
                    'language': {
                        "decimal": "",
                        "emptyTable": "Không có dữ liệu",
                        "info": "Hiển thị từ _START_ đến _END_ trong _TOTAL_ mục",
                        "infoEmpty": "Showing 0 to 0 of 0 entries",
                        "infoFiltered": "(filtered from _MAX_ total entries)",
                        "infoPostFix": "",
                        "thousands": ",",
                        "lengthMenu": "Hiển thị _MENU_ mục",
                        "loadingRecords": "Đang tải...",
                        "search": "Tìm kiếm:",
                        "zeroRecords": "Không tìm thấy dữ liệu",
                        "paginate": {
                            "first": "First",
                            "last": "Last",
                            "next": "Sau",
                            "previous": "Trước"
                        },
                    },
                    "aaSorting": [],

                    "autoWidth": false,
                    "aLengthMenu": [[-1], ["All"]],
                    "bLengthChange": false,
                    "bPaginate": false,
                    "bInfo": false,
               });
                dataTable.on('order.dt search.dt', function () {
                       let i = 1;
                       dataTable.cells(null, 0, { search: 'applied', order: 'applied' }).every(function (cell) {
                           this.data(i++);
                       });
                }).draw();
                $('#showEvol').append(`
                            <button onclick="hideRead()" type="button" class="btn btn-danger" data-dismiss="modal">Hủy</button>`);
                $("#modalEvol").modal('show');
            }

            function hideRead() {
                $("#modalEvol").modal('hide');
    }


        // modal Evol User
                 function ReadAllUser() {
                if (jQuery('#showEvolUser').val() != null || jQuery('#showEvolUser').val() != "") {
                    $("#modalEvolUser").modal('show');

                    } else { 

                    jQuery('#showEvolUser').empty();
                    $("#zero_config_evol_user").dataTable().fnDestroy();
                    dataTable = $("#zero_config_evol_user").DataTable({
                     'ajax': {
                            'url': '@Url.Action("GetEvolUserTable", "EReportTerm")',
                            'type': 'get',
                            'datatype': 'json',
                            'serverSide': 'true',
                     },
                     'columns':
                         [
                             { 'data': 'stt', 'width': '5%', },
                             {
                                 'data': 'class_id', 'width': '10%', 'render': function (data, type, row) {
                                     return '<a id="proof" href="@Url.Action("ReportClass", "EReportTerm")/' + row.id + '/" >' + data + '</a>';
                                 }
                                },
                             { 'data': 'name_advisor', 'width': '15%' },
                             { 'data': 'evol_sys', 'width': '10%' },
                             { 'data': 'eval_advisor', 'width': '10%' },
                             { 'data': 'eval_admin', 'width': '10%' },
                             { 'data': 'note', 'width': '10%' },
                             {
                                 'data': 'id', 'width': '10%', 'render': function (data) {
                                     return '<button onclick="UpdateAdminReport(' + data + ')" class="btn btn-danger">Đánh giá <i class="fas fa-tasks" ></i></button >'
                                 }

                             }
                            ],
                        "aaSorting": [],

                        'language': {
                            "decimal": "",
                            "emptyTable": "Không có dữ liệu",
                            "info": "Hiển thị từ _START_ đến _END_ trong _TOTAL_ mục",
                            "infoEmpty": "hiển thị 0 đến 0 trong 0 dữ liệu",
                            "infoFiltered": "(filtered from _MAX_ total entries)",
                            "infoPostFix": "",
                            "thousands": ",",
                            "lengthMenu": "Hiển thị _MENU_ mục",
                            "loadingRecords": "Đang tải...",
                            "search": "Tìm kiếm:",
                            "zeroRecords": "Không tìm thấy dữ liệu",
                            "paginate": {
                                "first": "First",
                                "last": "Last",
                                "next": "Sau",
                                "previous": "Trước"
                            },
                        },
                        "autoWidth": true,
           /*             "aLengthMenu": [[-1], ["All"]],*/
                        "bLengthChange": true,
                        "bPaginate": true,
                        "bInfo": false,
                   });
                    dataTable.on('order.dt search.dt', function () {
                           let i = 1;
                           dataTable.cells(null, 0, { search: 'applied', order: 'applied' }).every(function (cell) {
                               this.data(i++);
                           });
                    }).draw();
                    $('#showEvolUser').append(`
                                <button onclick="hideReadUser()" type="button" class="btn btn-danger" data-dismiss="modal">Hủy</button>`);
                $("#modalEvolUser").modal('show');
            }
            }

            function hideReadUser() {
                $("#modalEvolUser").modal('hide');
        }
        // model export
            function ExportUserAll() {
                input = document.getElementById("semester");
                const d = new Date();
                let id = d.getFullYear();
         
                Swal.fire({

                    text: 'Hệ thống đang xử lí !',
                    timerProgressBar: true,
                    didOpen: () => {
                        Swal.showLoading()

                    },
                });
               
            $.ajax({
                url: '@Url.Action("ExportUserAll", "EReportTerm")',
                type: 'POST',
                data: {
                    year: id,
                },
                success: function (data) {
                    if (data.success == false) {
                        Swal.close();
                        
                        Swal.fire({
                            icon: 'error',
                            title: data.message,
                            showClass: {
                                popup: 'animate__animated animate__fadeInDown'
                            },
                            hideClass: {
                                popup: 'animate__animated animate__fadeOutUp'
                            }
                        }).then(function (result) {
                            if (result.value) {
                                location.reload();
                            }
                        })

                    } else {
                        Swal.close();
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'Xuất dữ liệu thành công.'
                        });
                        var bytes = new Uint8Array(data.FileContents);
                        var blob = new Blob([bytes], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                        var downloadUrl = URL.createObjectURL(blob);
                        var a = document.createElement("a");
                        a.href = downloadUrl;
                        a.download = data.FileDownloadName;
                        document.body.appendChild(a);
                        a.click();
                        document.body.removeChild(a);
                    }

                },
                error: function (err) {
                    alert(err);
                },
            })
        }






        // cập nhật thông tin đánh giá
        function UpdateAdminReport(idItem) {
            this.hideRead();

            $.ajax({
                url: '@Url.Action("ShowCheck", "EReportTerm")',
                type: 'get',
                data: {
                    id: idItem
                },
                success: function (data) {
                    if (data.success == true) {

                        $('#modalUpdateCheck').modal("show");
                        $('#id_edit_check').val(idItem);
                        $("#txtLoaiECheck").val(data.data);
                    } else {
                        alert(data.message);
                    }
                }

            })
    }
        function HideModalUpCheck() {
            $('#modalUpdateCheck').modal("hide");

        }

        $(document).ready(function () {     //Cập nhật đánh giá
            $('#btnEditCheckUser').click(function () {
                let formDataEdt = new FormData();
                let jsonDataEdt = {
                    id: $("#id_edit_check").val(),
                    val: $("#txtLoaiECheck").val()
                };
                for (const [key, value] of Object.entries(jsonDataEdt)) {
                    formDataEdt.append(key, value);

                }
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("EvalInitChecked", "EReportTerm")',
                    contentType: false,
                    processData: false,
                    data: formDataEdt,

                    success: function (data) {
                            if (data.success == true) {
                                $('#modalUpdate').modal('hide');
                                Swal.fire({
                                    icon: "success",
                                    title: data.message,
                                    showClass: {
                                        popup: 'animate__animated animate__fadeInDown'
                                    },
                                    hideClass: {
                                        popup: 'animate__animated animate__fadeOutUp'
                                    }
                                }).then(function (result) {
                                    if (result.value) {
                                        this.HideModalUpCheck();
                                        $("#zero_config_evol_user").DataTable().ajax.reload(null,false);


                                    }
                                })
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: data.message,
                                    showClass: {
                                        popup: 'animate__animated animate__fadeInDown'
                                    },
                                    hideClass: {
                                        popup: 'animate__animated animate__fadeOutUp'
                                    }
                                }).then(function (result) {
                                    if (result.value) {
                                        $("#zero_config_evol_user").DataTable().ajax.reload(null, false);


                                    }
                                })
                            }
                     }
                })

            })
        })
        function HideModalUp() {
            $("#modalUpdate").modal("hide");
         }


        $(document).ready(function () {
            $("#myInput").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#myTable tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
        // thêm đánh giá
        function createEvol() {
            $("#modalCreate").modal("show");
            this.hideRead();
        }
        function HideModal() {
            $("#modalCreate").modal("hide");
        }
        $(document).ready(function () {
            $('#btnCreate').click(function () {
                let formData = new FormData();
                let jsonData = {
                    rank_type  :  $("#txtLoai").val(),
                    description  :  $("#txtMota").val(),
                    rank_des  :  $("#txtDanhGia").val(),
                    rank_count  :  $("#txtTu").val(),
                    rank_end  :  $("#txtKhoang").val()
                };
                for (const [key, value] of Object.entries(jsonData)) {
                    formData.append(key, value);
                }
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("CreateApi", "EReportTerm")',
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (data) {
                        if (data.success == false) {
                            Swal.fire({
                                icon: 'error',
                                title: data.message,
                            })
                        } else {
                            $("#modalCreate").modal("hide");
                            Swal.fire({
                                icon: "success",
                                title: 'Thêm tiêu chí thành công',
                                showClass: {
                                    popup: 'animate__animated animate__fadeInDown'
                                },
                                hideClass: {
                                    popup: 'animate__animated animate__fadeOutUp'
                                }
                            }).then(function (result) {
                                if (result.value) {
                                    location.reload();
                                }
                            })

                        }
                    }
                 })
            })
         })



         // cập nhật thông tin đánh giá
        function Update(id_title) {
            this.hideRead();

            $.ajax({
                url:'@Url.Action("Details", "EReportTerm")' ,
                type: 'get',
                data: {
                    id: id_title
                },
                success: function (data) {
                    if (data.success == true) {

                        $('#modalUpdate').modal("show");
                        $('#id_edit').val(id_title);
                        $("#txtLoaiE").val(data.data.rank_type);
                        $("#txtMotaE").val(data.data.description);
                        $("#txtDanhGiaE").val(data.data.rank_des);
                        $("#txtTuE").val(data.data.rank_count);
                        $("#txtKhoangE").val(data.data.rank_end);

                    } else {
                        alert(data.message);
                    }
                }

            })
        }
        $(document).ready(function () {     //Cập nhật thông tin người dùng
            $('#btnEdit').click(function () {
                let formDataEdt = new FormData();
                let jsonDataEdt = {
                    id: $("#id_edit").val(),
                    rank_type: $("#txtLoaiE").val(),
                    description: $("#txtMotaE").val(),
                    rank_des: $("#txtDanhGiaE").val(),
                    rank_count: $("#txtTuE").val(),
                    rank_end: $("#txtKhoangE").val()
                };
                for (const [key, value] of Object.entries(jsonDataEdt)) {
                    formDataEdt.append(key, value);

                }
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("EditApi", "EReportTerm")',
                    contentType: false,
                    processData: false,
                    data: formDataEdt,

                    success: function (data) {
                            if (data.success == true) {
                                $('#modalUpdate').modal('hide');
                                Swal.fire({
                                    icon: "success",
                                    title: 'Tiêu chí đã cập nhập thành công',
                                    showClass: {
                                        popup: 'animate__animated animate__fadeInDown'
                                    },
                                    hideClass: {
                                        popup: 'animate__animated animate__fadeOutUp'
                                    }
                                }).then(function (result) {
                                    if (result.value) {
                                        location.reload();
                                    }
                                })
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Tiêu chí đã cập nhật thành công',
                                    showClass: {
                                        popup: 'animate__animated animate__fadeInDown'
                                    },
                                    hideClass: {
                                        popup: 'animate__animated animate__fadeOutUp'
                                    }
                                }).then(function (result) {
                                    if (result.value) {
                                        location.reload();
                                    }
                                })
                            }
                     }
                })

            })
        })
        function HideModalUp() {
            $("#modalUpdate").modal("hide");
         }
        // xoá thông tin người dùng
    function Delete (id_std) {
        Swal.fire({
            title: "Bạn thực sự muốn xóa tiêu chí này?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Xóa",
            cancelButtonText: "Hủy",
            reverseButtons: true
        }).then(function (result) {
            if (result.value) {
                 $.ajax({
                        url: '@Url.Action("DeleteApi", "EReportTerm")',
                        type: 'POST',
                        data: {
                            id: id_std
                        },
                        success: function (data) {
                            if (data.success == true) {
                                Swal.fire({
                                    icon: "success",
                                    title: 'Tiêu chí này đã xóa thành công',
                                    showClass: {
                                        popup: 'animate__animated animate__fadeInDown'
                                    },
                                    hideClass: {
                                        popup: 'animate__animated animate__fadeOutUp'
                                    }
                                }).then(function (result) {
                                    if (result.value) {
                                        location.reload();
                                    }
                                 })
                             } else {
                                 Swal.fire(
                                     'Thông báo',
                                     data.message
                                 );
                             }
                        }
                  })
                //Swal.fire(
                //    "Deleted!",
                //    "Your file has been deleted.",
                //    "success",
                //)
                // result.dismiss can be "cancel", "overlay",
                // "close", and "timer"
            } else if (result.dismiss === "cancel") {

            }
        });
    }
        // upload



</script>
