@model IEnumerable<AdvisorManagement.Models.VLClass>
@using AdvisorManagement.Models;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layoutvlu.cshtml";

    IEnumerable<AccountUser> nameUser = ViewBag.nameUser as IEnumerable<AccountUser>;
    IEnumerable<VLClass> hocky = ViewBag.hocky as IEnumerable<VLClass>;
    IEnumerable<VLClass> listClass = ViewBag.listClass as IEnumerable<VLClass>;
    IEnumerable<Advisor> advisor = ViewBag.Advisor as IEnumerable<Advisor>;
    var yearNow = (int)Session["yearNow"];
    var yearLast = yearNow - 1;
}



<div class="container-fluid">
    <!-- ============================================================== -->
    <!-- Start Page Content -->
    <!-- ============================================================== -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title mb-0">Phân Công lớp - VLU</h5>
                </div>
                <div class="page-breadcrumb">
                    <div class="row">

                        <div class="col-12 d-flex no-block align-items-center">
                            <a onclick="CreateTitle()" class="btn btn-success" style="margin-bottom: 5px; margin-left: 5px; width: 150px;color:white">
                                Thêm<i style="margin-left:5px" class="fas fa-plus"></i>
                            </a>
                            <a onclick="ImportExcelFile()" class="btn btn-success" style="margin-bottom: 5px; margin-left: 5px; width: 150px; color: white">
                                Nhập danh sách<i style="margin-left:5px" class="fas fa-plus"></i>
                            </a>
                            <a onclick="ExportExcel()" class="btn btn-success" style="margin-bottom: 5px; margin-left: 5px; width: 150px; color: white ">
                                Xuất danh sách<i style="margin-left:5px" class="fas fa-plus"></i>
                            </a>
                            @*<div class="ms-auto text-end">
                                    <nav aria-label="breadcrumb">
                                        <ol class="breadcrumb">
                                            <li class="breadcrumb-item"><a href="#">Home</a></li>
                                            <li class="breadcrumb-item active" aria-current="page">
                                                Library
                                            </li>
                                        </ol>
                                    </nav>
                                </div>*@
                        </div>
                    </div>

                </div>

            </div>

            <div class="card">
                <div class="card-body">
                    <h5 class="card-title"></h5>
                    <div class="col-md-4">
                        <label for="cars">Chọn học kỳ:</label>

                        <select id="semester" name="semester" onchange="myFunction()">
                            <option selected value="@yearNow">@yearLast - @yearNow</option>
                            @foreach (var item in hocky)
                            {
                                var i = int.Parse(item.semester_name) - 1;
                                <option value="@item.semester_name">@i - @item.semester_name</option>
                            }

                        </select>
                    </div>
                    @*<div class="searchbar">
                            <input id="myInput" onkeyup="myFunction()" class="search_input" type="text" name="" placeholder="Tìm kiếm từ khoá"
                        </div>*@
                    <div class="table-responsive">
                        <table width="100%" id="zero_config_admin" class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>Stt</th>
                                    <th>Mã lớp</th>
                                    <th>MGV</th>
                                    <th>CVHT</th>
                                    <th>Email</th>
                                    <th>Ngày tạo</th>
                                    <th>Khóa</th>
                                    <th>Hoạt động</th>
                                </tr>
                            </thead>
                            <tbody id="myTable">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="modalCreate" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Thêm Lớp</h4>
                </div>
                <div class="">
                    <div class="col-md-12" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                        <div class="col-md-4"><span>Mã lớp học</span></div>
                        <div class="col-md-8">
                            <input id="cre_class_code" type="text" class="form-control" />
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="col-md-12" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                        <div class="col-md-4"><span>Giảng viên</span></div>
                        <div class="col-md-8">
                            <select id="advisor_code" name="advisorcode" style=" width: 155px;
                                                                height: 35px; text-align: center; font-size: 15px;">
                                @foreach (var item in advisor)
                                {
                                    //if (Model.advisor_code == item.advisor_code)
                                    //{
                                    foreach (var itemUser in nameUser)
                                    {
                                        if (item.advisor_code.Equals(itemUser.user_code))
                                        {

                                            <option selected value="@item.advisor_code">@itemUser.user_name</option>

                                        }
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button onclick="HideModal()" type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
                    <button id="btnUpload" class="btn btn-primary" type="submit">Thêm</button>
                </div>
            </div>
        </div>
    </div>



    <div id="modalUpdate" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Chỉnh sửa phân công lớp</h4>
                </div>
                <input hidden id="id_VLCLass" value="" />
                <div class="">
                    <div class="col-md-12" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                        <div class="col-md-4"><span>Lớp học</span></div>
                        <div class="col-md-8">
                            <input id="edit_class_code" type="text" class="form-control" />
                            @*<select id="edit_class_code" name="edit_class_code" style=" width: 155px;
                                                                        height: 35px; text-align: center; font-size: 15px;">

                                    @foreach (var item in listClass)
                                    {
                                        <option value="@item.id">@item.class_code</option>
                                    }


                                </select>*@

                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="col-md-12" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                        <div class="col-md-4"><span>Giảng viên</span></div>
                        <div class="col-md-8">
                            <select id="edit_advisor_code" name="edit_advisor_code" style=" width: 155px;
                                                                height: 35px; text-align: center; font-size: 15px;">
                                @foreach (var item in advisor)
                                {
                                    //if (Model.advisor_code == item.advisor_code)
                                    //{
                                    foreach (var itemUser in nameUser)
                                    {
                                        if (item.advisor_code.Equals(itemUser.user_code))
                                        {

                                            <option selected value="@item.advisor_code">@itemUser.user_name</option>

                                        }
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button onclick="HideModalUp()" type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
                    <button id="btnEdit" class="btn btn-primary" type="submit">Sửa</button>
                </div>

            </div>
        </div>
    </div>





    <div id="modalDetail" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Xem chi tiết lớp</h4>
                </div>
                <input hidden id="id_VLCLas" value="" />
                <div class="">
                    <div class="col-md-12" style="padding-bottom: 12px;padding-top: 12px; padding-left:15px">
                        <div class="col-md-4"><span>Học kì:</span></div>
                        <div class="col-md-8">
                            <input id="detail_semester_name" type="text" class="form-control" disabled="disabled" />

                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="col-md-12" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                        <div class="col-md-4"><span>Tên menu có trong hệ thống:</span></div>
                        <div class="col-md-8">
                            <input id="detail_class_code" type="text" class="form-control" disabled="disabled" />

                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="col-md-12" style="padding-bottom: 12px; padding-top: 12px; padding-left: 15px">
                        <div class="col-md-4"><span>Tên menu có trong hệ thống:</span></div>
                        <div class="col-md-8">
                            <input id="detail_advisor_code" type="text" class="form-control" disabled="disabled" />

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button onclick="HideModalDtail()" type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
                </div>

            </div>
        </div>
    </div>
    <!-- ============================================================== -->
    <!-- End PAge Content -->
    <!-- ============================================================== -->
    <!-- ============================================================== -->
    <!-- Right sidebar -->
    <!-- ============================================================== -->
    <!-- .right-sidebar -->
    <!-- ============================================================== -->
    <!-- End Right sidebar -->
    <!-- ============================================================== -->
</div>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Nhập danh sách lớp</h4>
            </div>
            <div class="">
                <div class="col-md-12" style="padding-bottom: 12px;padding-top: 12px; padding-left:15px">
                    <div class="col-md-10">
                        <span>File mẫu:</span>
                        <a href="@Url.Action("Download", "ClassManagements")">CVHT_Phancong_@yearLast-@yearNow</a>
                    </div>
                </div>
                <div class="col-md-12" style="padding-bottom: 12px;padding-top: 12px; padding-left:15px">
                    <div class="col-md-4"><span>Chọn file:</span></div>
                    <div class="col-md-8">
                        @Html.Raw(ViewBag.Error)
                        <input name="postedFile" type="file" id="fileExcel" class="form-control" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button onclick="HideModalImport()" type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
                <button id="btnImportExcel" class="btn btn-primary" type="submit">Import</button>
            </div>
        </div>
    </div>
</div>
<script src="~/Assets/extra-libs/DataTables/datatables.js"></script>
<script src="~/Assets/extra-libs/DataTables/datatables.min.js"></script>
<script src="//cdn.datatables.net/plug-ins/1.10.11/sorting/date-eu.js" type="text/javascript"></script>

<script>



    //Lấy data khi vừa vào web admin
       //Lấy data khi vừa vào web admin
    var dataTable = $("#zero_config_admin").DataTable({
         'ajax': {
                'url': '@Url.Action("GetData", "ClassManagements")',
                'data': function (d) {
                 var input = document.getElementById("semester");
                         filter = input.value.toUpperCase();
                            d.year = filter ;
                         },
                'type': 'get',
                'datatype':'json',
         },
         'columns':
             [
                 { 'data': 'ID', 'width': '5%', },
                  {
                     'data': 'idClass', 'width': '13%','render': function (data, type, row) {
                        @* @Html.ActionLink(item.class_code, "DetailClass", "Students", new { area = "", id = item.id }, null)*@
                             return '<a id="proof" href="@Url.Action("DetailClass", "Students", new { area = "" })/' + row.ID + '/" >' + data + '</a>';
                     }
                 },
                 {
                     'data': 'idAdvisor', 'width': '15%'
                 },
                 { 'data': 'name', 'width': '15%' },
                 { 'data': 'email', 'width': '15%'},
                 {
                     'data': 'create_time', 'width': '15%', 'render': function (data) {
                         return moment(data).format("DD-MM-YYYY HH:mm");
                     }
},
                 { 'data': 'course', 'width': '5%' },
                 {
                     'data': 'ID', 'width': '20%', 'render': function (data, type, row) {
                         /*<a onclick="Details(' + data + ')" id="btndetail" class="btn btn-success" style="margin-bottom: 5px; margin-left: 5px;">Chi tiết <i class="fas fa-tasks"></i></a>*/
                         return '<a onclick="Update(' + data + ')" id="btnUpdate" class="btn btn-info" style="margin-bottom: 5px; margin-left: 5px;">Sửa <i class="fas fa-edit"></i></a><a onclick="Detele(' + data + ')" id="btnDelete" class="btn btn-danger" style="margin-bottom: 5px; margin-left: 5px;">XÓA <i class="fas fa-trash-alt"></i></a>'
                     },
                 }
            ],
        'bAutoWidth': false,
        'responsive': false,
        "order": [[0, "asc"]],
        'ordering': false,
        'rowsGroup': [0, 1],
        'language': {
            "decimal": "",
            "emptyTable": "Không có dữ liệu",
            "info": "Hiển thị từ _START_ đến _END_ trong _TOTAL_ mục",
            "infoEmpty": "Showing 0 to 0 of 0 entries",
            "infoFiltered": "(filtered from _MAX_ total entries)",
            "infoPostFix": "",
            "thousands": ",",
            "lengthMenu": "Hiển thị _MENU_ mục",
            "loadingRecords": "Đang tải...",
            "search": "Tìm kiếm:",
            "zeroRecords": "No matching records found",
            "paginate": {
                "first": "First",
                "last": "Last",
                "next": "Sau",
                "previous": "Trước"
            },
        },
        "order": [[4, "desc"]],
        "columnDefs": [{ "targets": 4, "type": "date-eu" }],
    });

    dataTable.on('order.dt search.dt', function () {
        let i = 1;
        dataTable.cells(null, 0, { search: 'applied', order: 'applied' }).every(function (cell) {
            this.data(i++);
        });
    }).draw();
 //filter data khi Admin chọn năm-->-->-->-->
        function myFunction() {
            var input = document.getElementById("semester");
            filter = input.value.toUpperCase();
            if (filter != @yearNow) {
                seleclYear()
            } else {
                selectYearNow()
            }
        }
        function seleclYear() {
            $("#zero_config_admin").dataTable().fnDestroy();
              var dataTable = $("#zero_config_admin").DataTable({
         'ajax': {
                'url': '@Url.Action("GetData", "ClassManagements")',
                'data': function (d) {
                 var input = document.getElementById("semester");
                         filter = input.value.toUpperCase();
                            d.year = filter ;
                         },
                'type': 'get',
                'datatype':'json',
         },
         'columns':
             [
                 { 'data': 'ID', 'width': '5%', },
                  {
                     'data': 'idClass', 'width': '13%','render': function (data, type, row) {
                        @* @Html.ActionLink(item.class_code, "DetailClass", "Students", new { area = "", id = item.id }, null)*@
                             return '<a id="proof" href="@Url.Action("DetailClass", "Students", new { area = "" })/' + row.ID + '/" >' + data + '</a>';
                     }
                 },
                 {
                     'data': 'idAdvisor', 'width': '15%'
                 },
                 { 'data': 'name', 'width': '15%' },
                 { 'data': 'email', 'width': '15%'},
                 {
                     'data': 'create_time', 'width': '15%', 'render': function (data) {
                         return moment(data).format("DD-MM-YYYY HH:mm");
                     }
},
                 { 'data': 'course', 'width': '5%' },
                 {
                     'data': 'ID', 'width': '20%', 'visible': false, 'render': function (data, type, row) {
                         /*<a onclick="Details(' + data + ')" id="btndetail" class="btn btn-success" style="margin-bottom: 5px; margin-left: 5px;">Chi tiết <i class="fas fa-tasks"></i></a>*/
                         return '<a onclick="Update(' + data + ')" id="btnUpdate" class="btn btn-info" style="margin-bottom: 5px; margin-left: 5px;">Sửa <i class="fas fa-edit"></i></a><a onclick="Detele(' + data + ')" id="btnDelete" class="btn btn-danger" style="margin-bottom: 5px; margin-left: 5px;">XÓA <i class="fas fa-trash-alt"></i></a>'
                     },
                 }
            ],
        'bAutoWidth': false,
        'responsive': false,
        "order": [[0, "asc"]],
        'ordering': false,
        'rowsGroup': [0, 1],
        'language': {
            "decimal": "",
            "emptyTable": "Không có dữ liệu",
            "info": "Hiển thị từ _START_ đến _END_ trong _TOTAL_ mục",
            "infoEmpty": "Showing 0 to 0 of 0 entries",
            "infoFiltered": "(filtered from _MAX_ total entries)",
            "infoPostFix": "",
            "thousands": ",",
            "lengthMenu": "Hiển thị _MENU_ mục",
            "loadingRecords": "Đang tải...",
            "search": "Tìm kiếm:",
            "zeroRecords": "No matching records found",
            "paginate": {
                "first": "First",
                "last": "Last",
                "next": "Sau",
                "previous": "Trước"
            },
        },
        "order": [[4, "desc"]],
        "columnDefs": [{ "targets": 4, "type": "date-eu" }],
    });

    dataTable.on('order.dt search.dt', function () {
        let i = 1;
        dataTable.cells(null, 0, { search: 'applied', order: 'applied' }).every(function (cell) {
            this.data(i++);
        });
    }).draw();
        }
        function selectYearNow() {
            $("#zero_config_admin").dataTable().fnDestroy();
              var dataTable = $("#zero_config_admin").DataTable({
         'ajax': {
                'url': '@Url.Action("GetData", "ClassManagements")',
                'data': function (d) {
                 var input = document.getElementById("semester");
                         filter = input.value.toUpperCase();
                            d.year = filter ;
                         },
                'type': 'get',
                'datatype':'json',
         },
         'columns':
             [
                 { 'data': 'ID', 'width': '5%', },
                  {
                     'data': 'idClass', 'width': '13%','render': function (data, type, row) {
                        @* @Html.ActionLink(item.class_code, "DetailClass", "Students", new { area = "", id = item.id }, null)*@
                             return '<a id="proof" href="@Url.Action("DetailClass", "Students", new { area = "" })/' + row.ID + '/" >' + data + '</a>';
                     }
                 },
                 {
                     'data': 'idAdvisor', 'width': '15%'
                 },
                 { 'data': 'name', 'width': '15%' },
                 { 'data': 'email', 'width': '15%'},
                 {
                     'data': 'create_time', 'width': '15%', 'render': function (data) {
                         return moment(data).format("DD-MM-YYYY HH:mm");
                     }
},
                 { 'data': 'course', 'width': '5%' },
                 {
                     'data': 'ID', 'width': '20%', 'render': function (data, type, row) {
                         /*<a onclick="Details(' + data + ')" id="btndetail" class="btn btn-success" style="margin-bottom: 5px; margin-left: 5px;">Chi tiết <i class="fas fa-tasks"></i></a>*/
                         return '<a onclick="Update(' + data + ')" id="btnUpdate" class="btn btn-info" style="margin-bottom: 5px; margin-left: 5px;">Sửa <i class="fas fa-edit"></i></a><a onclick="Detele(' + data + ')" id="btnDelete" class="btn btn-danger" style="margin-bottom: 5px; margin-left: 5px;">XÓA <i class="fas fa-trash-alt"></i></a>'
                     },
                 }
            ],
        'bAutoWidth': false,
        'responsive': false,
        "order": [[0, "asc"]],
        'ordering': false,
        'rowsGroup': [0, 1],
        'language': {
            "decimal": "",
            "emptyTable": "Không có dữ liệu",
            "info": "Hiển thị từ _START_ đến _END_ trong _TOTAL_ mục",
            "infoEmpty": "Showing 0 to 0 of 0 entries",
            "infoFiltered": "(filtered from _MAX_ total entries)",
            "infoPostFix": "",
            "thousands": ",",
            "lengthMenu": "Hiển thị _MENU_ mục",
            "loadingRecords": "Đang tải...",
            "search": "Tìm kiếm:",
            "zeroRecords": "No matching records found",
            "paginate": {
                "first": "First",
                "last": "Last",
                "next": "Sau",
                "previous": "Trước"
            },
        },
        "order": [[4, "desc"]],
        "columnDefs": [{ "targets": 4, "type": "date-eu" }],
    });

    dataTable.on('order.dt search.dt', function () {
        let i = 1;
        dataTable.cells(null, 0, { search: 'applied', order: 'applied' }).every(function (cell) {
            this.data(i++);
        });
    }).draw();
       }

    $(document).ready(function () {
        $("#myInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#myTable tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });

    function ImportExcelFile() {
        $("#myModal").modal("show");
    }
    function HideModalImport() {
        $("#myModal").modal("hide");
    }
    $(document).ready(function () {
        $('#btnImportExcel').click(function () {
            var formData = new FormData();
            var fileExcel = document.getElementById("fileExcel");
            var myFile = fileExcel.files[0];
            formData.append("postedfile", myFile);
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ImportClass", "ClassManagements",new {area = "Admin"})',
                contentType: false,
                processData: false,
                data: formData,
                success: function (data) {
                    if (data.success == false) {
                        $('#fileExcel').val(null);
                        $("#myModal").modal("hide");
                        Swal.fire({
                            icon: 'error',
                            title: data.message,
                            showClass: {
                                popup: 'animate__animated animate__fadeInDown'
                            },
                            hideClass: {
                                popup: 'animate__animated animate__fadeOutUp'
                            }
                        }).then(function (result) {
                            if (result.value) {
                                dataTable.ajax.reload(null, false);
                            }
                        })
                    } else {
                        $('#fileExcel').val(null);
                        $("#myModal").modal("hide");
                        Swal.fire({
                            icon: "success",
                            title: data.message,
                            showClass: {
                                popup: 'animate__animated animate__fadeInDown'
                            },
                            hideClass: {
                                popup: 'animate__animated animate__fadeOutUp'
                            }
                        }).then(function (result) {
                            if (result.value) {
                                dataTable.ajax.reload(null, false);
                            }
                        })
                    }
                }
            })
        })
    })
    $("#zero_config").DataTable();


    function CreateTitle() {
        $("#modalCreate").modal("show");
    }
    function HideModal() {
        $("#modalCreate").modal("hide");
    }


    $(document).ready(function () {
        $('#btnUpload').click(function () {
            var formData = new FormData();
            var classcode = $("#cre_class_code").val();
            var advisorcode = $("#advisor_code option:selected").val();

            formData.append("class_code", classcode);
            formData.append("advisor_code", advisorcode);
            formData.append("year", @yearNow);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("Create", "ClassManagements")',
                contentType: false,
                processData: false,
                data: formData,
                success: function (data) {
                    if (data.success == false) {
                        Swal.fire({
                            icon: 'error',
                            title: data.message,
                            showClass: {
                                popup: 'animate__animated animate__fadeInDown'
                            },
                            hideClass: {
                                popup: 'animate__animated animate__fadeOutUp'
                            }
                        }).then(function (result) {
                            if (result.value) {
                                dataTable.ajax.reload(null, false);
                            }
                         })
                    } else {
                        $("#modalCreate").modal("hide");
                        Swal.fire({
                            icon: "success",
                            title: data.message,
                            showClass: {
                                popup: 'animate__animated animate__fadeInDown'
                            },
                            hideClass: {
                                popup: 'animate__animated animate__fadeOutUp'
                            }
                        }).then(function (result) {
                            if (result.value) {
                                dataTable.ajax.reload(null, false);
                            }
                        })
                    }
                }
             })
        })
    })



         function HideModalDtail() {
        $("#modalDetai").modal("hide");
        }
         //Lấy thông tin người dùng để cập nhật
    function Update(id) {
            let id_title = id;
            $.ajax({
                url: '@Url.Action("EditClass", "ClassManagements")',
                type: 'get',
                data: {
                    id: id_title
                },
                success: function (data) {
                    if (data.success == true) {

                        $('#modalUpdate').modal("show");

                        $('#edit_class_code').val(data.R_class_code);
                        $('select[name="edit_advisor_code"]').val(data.R_advisor).prop('selected', true);
                  /*      $('select[name="edit_semester_name"]').val(data.R_semester).prop('selected', true);*/

                        $('#id_VLCLass').val(data.R);

                    } else {
                        alert(data.message);
                    }
                }

            })
    }
    function HideModalUp() {
        $("#modalUpdate").modal("hide");
    }

    $(document).ready(function () {     //Cập nhật thông tin lớp
        $('#btnEdit').click(function () {
            var class_code = $("#edit_class_code").val();
            var advisor_code = $("#edit_advisor_code").val();
            var id = $('#id_VLCLass').val();
            //$(document).ready(function () {

            //    let id_menu =$('select[name="id_menu"]').val();
            //    let id_role = $('select[name="id_role"]').val();

            //});
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("UpdateClass", "ClassManagements")',
                    data: {
                        id: id,
                        class_code: class_code,
                        advisor_code: advisor_code,
                        year: @yearNow
                    },
                    success: function (data) {
                            if (data.success == true) {
                                $('#modalUpdate').modal('hide');
                                Swal.fire({
                                    icon: "success",
                                    title: data.message,
                                    showClass: {
                                        popup: 'animate__animated animate__fadeInDown'
                                    },
                                    hideClass: {
                                        popup: 'animate__animated animate__fadeOutUp'
                                    }
                                }).then(function (result) {
                                    if (result.value) {
                                        dataTable.ajax.reload(null, false);
                                    }
                                })
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: data.message,
                                    showClass: {
                                        popup: 'animate__animated animate__fadeInDown'
                                    },
                                    hideClass: {
                                        popup: 'animate__animated animate__fadeOutUp'
                                    }
                                }).then(function (result) {
                                    if (result.value) {
                                    }
                                })

                            }
                     }
                })

        })
    })



    //xem chi tiet
    function Details(id) {
        let id_iddetail = id;
        $.ajax({
            url: '@Url.Action("Details", "ClassManagements")',
            type: 'get',
            data: {
                id: id_iddetail
            },
            success: function (data) {
                if (data.success == true) {
                    $('#modalDetail').modal("show");
                    $('detail_class_code').val(data.R_class);
                    $('detail_advisor_code').val(data.R_advisor);
                    $('detail_semester_name').val(data.R_semester);
                    $('#id_VLCLass').val(data.R);
                    /*$('#modalUpdate').modal("show");*/
                } else {
                    alert(data.message);
                }
            }

        })
    }

    function ExportExcel() {
        var input = document.getElementById("semester");
        filter = input.value.toUpperCase();
         $.ajax({
                url: '@Url.Action("ExcelExport", "ClassManagements")',
                type: 'POST',
                data: {
                    year: filter
                },
                /*contentType: "application/json; charset=utf-8", */
                success: function (data) {
                    var bytes = new Uint8Array(data.FileContents);
                    var blob = new Blob([bytes], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                    var downloadUrl = URL.createObjectURL(blob);
                    var a = document.createElement("a");
                    a.href = downloadUrl;
                    a.download = data.FileDownloadName;
                    document.body.appendChild(a);
                    a.click();
                    document.body.removeChild(a);
                },
                error: function (err) {
                    alert(err);
                },
            })
    }

    //xem chi tiet
    function Detele(id) {
        let id_delete = id;
         Swal.fire({
            title: "Bạn thực sự muốn xóa lớp học?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Xóa",
            cancelButtonText: "Hủy",
            reverseButtons: true
        }).then(function (result) {
            if (result.value) {
                  $.ajax({
                        url: '@Url.Action("Delete", "ClassManagements")',
                        type: 'post',
                        data: {
                            id: id_delete
                        },
                        success: function (data) {
                            if (data.success == true) {
                                Swal.fire({
                                    icon: "success",
                                    title: data.message,
                                    showClass: {
                                        popup: 'animate__animated animate__fadeInDown'
                                    },
                                    hideClass: {
                                        popup: 'animate__animated animate__fadeOutUp'
                                    }
                                }).then(function (result) {
                                    if (result.value) {
                                        location.reload();
                                    }
                                 })


                             } else {
                                 Swal.fire(
                                     'Thông báo',
                                     data.message
                                 );
                             }
                        }
                  })
                //Swal.fire(
                //    "Deleted!",
                //    "Your file has been deleted.",
                //    "success",
                //)
                // result.dismiss can be "cancel", "overlay",
                // "close", and "timer"
            } else if (result.dismiss === "cancel") {

            }
        });
        @*if (confirm("Bạn thực sự muốn xóa đề mục này?")) {
            $.ajax({
                url: '@Url.Action("Delete", "ClassManagements")',
                type: 'post',
                data: {
                    id: id_delete
                },
                success: function (data) {
                    if (data.success == true) {
                        alert(data.message);
                        dataTable.ajax.reload(null, false);
                    } else {
                        alert(data.message);
                    }
                }

            })
        }*@
    }

</script>